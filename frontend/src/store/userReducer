
const RECEIVE_USER = 'users/RECEIVE_USER'
const RECEIVE_USERS = 'users/RECEIVE_USERS'

export const receiveUser = (user) => {
    return{
        type: RECEIVE_USER,
        user
    }
}

export const receiveUsers = (users) => {
    return{
        type: RECEIVE_USERS,
        users
    }
}

//THUNK ACTION CREATOR

export const fetchUsers = () => dispatch => {
    fetch('/api/users')
        .then(res => {
            if (res.ok) {
                return res.json()
            } else {
                throw res
            }
        })
        .then(data => dispatch(receiveUsers(data)))
        .catch((err) => console.error(err))
}
export const fetchUser = userId => dispatch => {
    fetch(`/api/users/${userId}`)
        .then(res => {
            if(res.ok) {
                return res.json()
            } else {
                throw res
            }
        })
        .then(data => dispatch(receiveUser(data)))
        .catch((err) => console.error(err))
}

const userReducer = (state ={}, action) => {
    const newState = {...state}

    switch(action.type) {
        case RECEIVE_USER:
            newState[action.user.id] = action.user
            return newState
        case RECEIVE_USERS:
            return action.users
        default:
            return state
    }
}

export default userReducer